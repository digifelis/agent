<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Ogrenci extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		$this->load->library('session');
        $this->load->model('Ogrenci_model');
		$this->y_okul_id = $this->session->userdata('y_okul_id');
		$this->yetki = $this->session->userdata('yetki');
		$this->kul_id = $this->session->userdata('kul_id');
		$this->zaman = date('Y-m-d H:i:s');

    } 


    /*
     * Listing of ogrenci
     */
    function index()
    {

		$this->kelime = $this->input->get('kelime');
		$this->kriter = $this->input->get('kriter');
		if($this->input->get('arsiv') == "" or $this->input->get('arsiv') == "0") {
			$params['arsiv'] = 0;
		} else {
			$params['arsiv'] = 1;
		}
		

		$params['kriter'] = $this->kriter;
		$params['kelime'] = $this->kelime;

		$data['kelime'] = $this->kelime;
			
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('ogrenci/index?');
        $config['total_rows'] = $this->Ogrenci_model->get_all_ogrenci_count($params);
        $this->pagination->initialize($config);

        $data['ogrenci'] = $this->Ogrenci_model->get_all_ogrenci($params);
        $data['_view'] = 'ogrenci/index';

        $this->load->view('layouts/main',$data);
    }
/* sürec bilgisi */
function surec_bilgisi(){
			/* acenta ile ilgli son işlemler */	;
		if($this->y_okul_id != 0) { 
		$query = $this->db->query('SELECT * FROM basvuru_surec where o_id = "'.$this->uri->segment("3").'" and a_id="'.$this->y_okul_id.'" order by surec_id desc');
		} else {
		$query = $this->db->query('SELECT * FROM basvuru_surec where o_id = "'.$this->uri->segment("3").'" order by surec_id desc');
		}
		$data['surec'] = $query->result_array();
		
	
        $data['_view'] = 'ogrenci/surec_bilgisi';
        $this->load->view('layouts/main',$data);	
}
/* dosya_yukle */
function dosya_yukle() {
	if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id, $this->yetki) == 1) {
				  $data = array();
				// If file upload form submitted
				if($this->input->post('fileSubmit') && !empty($_FILES['files']['name'])){
					$filesCount = count($_FILES['files']['name']);
					for($i = 0; $i < $filesCount; $i++){
						$_FILES['file']['name']     = $_FILES['files']['name'][$i];
						$_FILES['file']['type']     = $_FILES['files']['type'][$i];
						$_FILES['file']['tmp_name'] = $_FILES['files']['tmp_name'][$i];
						$_FILES['file']['error']     = $_FILES['files']['error'][$i];
						$_FILES['file']['size']     = $_FILES['files']['size'][$i];
						
						// File upload configuration
						$uploadPath = 'uploads/files/';
						$config['upload_path'] = $uploadPath;
						$config['allowed_types'] = 'jpg|jpeg|png|pdf';
						
						// Load and initialize upload library
						$this->load->library('upload', $config);
						$this->upload->initialize($config);
						
						// Upload file to server
						if($this->upload->do_upload('file')){
							// Uploaded file data
							$fileData = $this->upload->data();
							$uploadData[$i]['file_name'] = $fileData['file_name'];
							$uploadData[$i]['uploaded_on'] = date("Y-m-d H:i:s");
							$uploadData[$i]['o_id'] = $this->uri->segment("3");
							$uploadData[$i]['tipi'] = '1';
							$uploadData[$i]['belge_tipi'] = $this->input->post('belge_tipi');
							$ekbilgi = $this->y_okul_id;
						}
					}
					
					if(!empty($uploadData)){
						// Insert files data into the database
						$insert = $this->Ogrenci_model->insert($uploadData , $ekbilgi);
						
						if($insert == true) {
									$this->db->where('ogrenci_id',$this->uri->segment("3"));
									$params1 = array( 'durum' => '5' );
									$this->db->update('ogrenci',$params1);
						}
						// Upload status message
						$statusMsg = $insert?'Files uploaded successfully.':'Some problem occurred, please try again.';
						$this->session->set_flashdata('statusMsg',$statusMsg);
					}
				}
				
				// Get files data from the database
				$data['files'] = $this->Ogrenci_model->getRows($this->uri->segment("3"));
			
			
			$this->load->model('Ogrenci_model');
			$data['all_belge_tipi'] = $this->Ogrenci_model->get_all_belge_tipi();
			
			
			$data['_view'] = 'ogrenci/dosya_yukle';
			
			$this->load->view('layouts/main',$data);	
	} else { show_error('You cannot upload document for this student.');}
    
}




/* dosya_yukle */
function kabul_yukle() {
		if($this->yetki<3) {

	      $data = array();
        // If file upload form submitted
        if($this->input->post('fileSubmit') && !empty($_FILES['files']['name'])){
            $filesCount = count($_FILES['files']['name']);
            for($i = 0; $i < $filesCount; $i++){
                $_FILES['file']['name']     = $_FILES['files']['name'][$i];
                $_FILES['file']['type']     = $_FILES['files']['type'][$i];
                $_FILES['file']['tmp_name'] = $_FILES['files']['tmp_name'][$i];
                $_FILES['file']['error']     = $_FILES['files']['error'][$i];
                $_FILES['file']['size']     = $_FILES['files']['size'][$i];
                
                // File upload configuration
                $uploadPath = 'uploads/files/';
                $config['upload_path'] = $uploadPath;
                $config['allowed_types'] = 'pdf';
                
                // Load and initialize upload library
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                
                // Upload file to server
                if($this->upload->do_upload('file')){
                    // Uploaded file data
                    $fileData = $this->upload->data();
                    $uploadData[$i]['file_name'] = $fileData['file_name'];
                    $uploadData[$i]['uploaded_on'] = date("Y-m-d H:i:s");
					$uploadData[$i]['o_id'] = $this->uri->segment("3");
					$uploadData[$i]['tipi'] = '2';
					
					
					
                }
            }
            
            if(!empty($uploadData)){
                // Insert files data into the database
				
                $insert = $this->Ogrenci_model->insert($uploadData);
                
                // Upload status message
                $statusMsg = $insert?'Files uploaded successfully.':'Some problem occurred, please try again.';
                $this->session->set_flashdata('statusMsg',$statusMsg);
            }
        }
        
        // Get files data from the database
        $data['files'] = $this->Ogrenci_model->getRows_kabul($this->uri->segment("3"));
		
	$data['_view'] = 'ogrenci/kabul_yukle';
	$this->load->view('layouts/main',$data);
	} else {
	show_error('You must have administrator permission.');	
	}
}
    /*
     * Adding a new ogrenci
     */
    function add()
    {   
		$this->load->model('Ulkeler_model');
		
		
		if($this->yetki<3) {
        $this->load->library('form_validation');
		$this->form_validation->set_rules('pasaport_no','Passaport Number','required');
		$this->form_validation->set_rules('durum','Student Status','required');
		$this->form_validation->set_rules('a_id','Agent','required');
		$this->form_validation->set_rules('adi_soyadi','Name Surname','required');
		
		if($this->form_validation->run())     
         
		//		if(isset($_POST) && count($_POST) > 0)     
				{  
				$params = array(
					'a_id' => $this->input->post('a_id'),
					'durum' => $this->input->post('durum'),
					'adi_soyadi' => $this->input->post('adi_soyadi'),
					'pasaport_no' => $this->input->post('pasaport_no'),
					'baba_adi' => $this->input->post('baba_adi'),
					'anne_adi' => $this->input->post('anne_adi'),
					'dogum_yeri' => $this->input->post('dogum_yeri'),
					'dogum_tarihi' => $this->input->post('dogum_tarihi'),
					'cinsiyet' => $this->input->post('cinsiyet'),
					'medeni_durum' => $this->input->post('medeni_durum'),
					'uyrugu' => $this->input->post('uyrugu'),
					'adres' => $this->input->post('adres'),
					'posta_kodu' => $this->input->post('posta_kodu'),
					'sehir' => $this->input->post('sehir'),
					'ulke' => $this->input->post('ulke'),
					'telefon' => $this->input->post('telefon'),
					'zaman' => $this->zaman,
				);
				
				if($this->Ogrenci_model->pasaport_kontrol($params['pasaport_no']) == FALSE) {
					$ogrenci_id = $this->Ogrenci_model->add_ogrenci($params);
					redirect('ogrenci/index');
					} else {
					$this->load->model('Acenta_model');
					$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

					$this->load->model('Ogrenci_durum_model');
					$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();
					$data['all_ulkeler'] = $this->Ulkeler_model->get_all_ulkeler();
					$data['uyari'] = 'This passport number is already registered .';
					$data['_view'] = 'ogrenci/add';
					$this->load->view('layouts/main',$data);
					
					//redirect('ogrenci/acenta_add'); 
					}
			}
			else
			{
				$this->load->model('Acenta_model');
				$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

				$this->load->model('Ogrenci_durum_model');
				$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();
				$data['all_ulkeler'] = $this->Ulkeler_model->get_all_ulkeler();
				$data['_view'] = 'ogrenci/add';
				$data['uyari'] = '';	
				$this->load->view('layouts/main',$data);
			}
		} else {
		show_error('You must have administrator permission.');	
		}
            
        
    }  

	
	
	    /*
     * Adding a new ogrenci
     */
    function acenta_add()
    {   
		$this->load->model('Ulkeler_model');
        $this->load->library('form_validation');
		$this->form_validation->set_rules('pasaport_no','Passaport Number','required');
		$this->form_validation->set_rules('adi_soyadi','Name Surname','required');
		if($this->form_validation->run())     
         
		//		if(isset($_POST) && count($_POST) > 0)     
				{   
					$params = array(
						'a_id' => $this->y_okul_id,
						'durum' => "5",
						
					'adi_soyadi' => $this->input->post('adi_soyadi'),
					'pasaport_no' => $this->input->post('pasaport_no'),
					'baba_adi' => $this->input->post('baba_adi'),
					'anne_adi' => $this->input->post('anne_adi'),
					'dogum_yeri' => $this->input->post('dogum_yeri'),
					'dogum_tarihi' => $this->input->post('dogum_tarihi'),
					'cinsiyet' => $this->input->post('cinsiyet'),
					'medeni_durum' => $this->input->post('medeni_durum'),
					'uyrugu' => $this->input->post('uyrugu'),
					'adres' => $this->input->post('adres'),
					'posta_kodu' => $this->input->post('posta_kodu'),
					'sehir' => $this->input->post('sehir'),
					'ulke' => $this->input->post('ulke'),
					'telefon' => $this->input->post('telefon'),
					'zaman' => $this->zaman,
					);
					
					if($this->Ogrenci_model->pasaport_kontrol($params['pasaport_no']) == FALSE) {
					$ogrenci_id = $this->Ogrenci_model->add_ogrenci($params);
					redirect('ogrenci/index');
					} else {
					$this->load->model('Acenta_model');
					$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

					$this->load->model('Ogrenci_durum_model');
					$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();
					
					$data['all_ulkeler'] = $this->Ulkeler_model->get_all_ulkeler();
					
					$data['uyari'] = 'This passport number is already registered .';
					$data['_view'] = 'ogrenci/acenta_add';
					$this->load->view('layouts/main',$data);
					
					//redirect('ogrenci/acenta_add'); 
					}
					
				}
				else
				{
					$this->load->model('Acenta_model');
					$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

					$this->load->model('Ogrenci_durum_model');
					$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();
					
					$data['all_ulkeler'] = $this->Ulkeler_model->get_all_ulkeler();
					
					$data['uyari'] = '';
					$data['_view'] = 'ogrenci/acenta_add';
					$this->load->view('layouts/main',$data);
				}
		
    }  
	
    /*
     * Editing a ogrenci
     */
    function edit($ogrenci_id)
    {   
	$this->load->model('Ulkeler_model');
		if($this->yetki<3) {
				// check if the ogrenci exists before trying to edit it
				$data['ogrenci'] = $this->Ogrenci_model->get_ogrenci($ogrenci_id);
				
				if(isset($data['ogrenci']['ogrenci_id']))
				{
					if(isset($_POST) && count($_POST) > 0)     
					{   
						$params = array(
							'a_id' => $this->input->post('a_id'),
							'durum' => $this->input->post('durum'),
							'adi_soyadi' => $this->input->post('adi_soyadi'),
					'pasaport_no' => $this->input->post('pasaport_no'),
					'baba_adi' => $this->input->post('baba_adi'),
					'anne_adi' => $this->input->post('anne_adi'),
					'dogum_yeri' => $this->input->post('dogum_yeri'),
					'dogum_tarihi' => $this->input->post('dogum_tarihi'),
					'cinsiyet' => $this->input->post('cinsiyet'),
					'medeni_durum' => $this->input->post('medeni_durum'),
					'uyrugu' => $this->input->post('uyrugu'),
					'adres' => $this->input->post('adres'),
					'posta_kodu' => $this->input->post('posta_kodu'),
					'sehir' => $this->input->post('sehir'),
					'ulke' => $this->input->post('ulke'),
					'telefon' => $this->input->post('telefon'),
						);
						
						/* başvuru süreç bölümüne bilgi eklenmesi */
						if($this->input->post('durum') == 1 or $this->input->post('durum') == 5) {
							$a_id = $this->input->post('a_id');
							$aciklama = "International Students Office change student status -- ";
							$aciklama .= $this->input->post('aciklama');
				$sql = "INSERT INTO basvuru_surec (o_id, a_id,islem , zaman) VALUES ('".$ogrenci_id."' , '".$a_id."' , '".$aciklama."' , '".$this->zaman."')";
				$this->db->query($sql);
						}
						
						$this->Ogrenci_model->update_ogrenci($ogrenci_id,$params); 
						redirect($_SERVER['HTTP_REFERER']);						
						//redirect('ogrenci/index');
					}
					else
					{
						$data['yetki'] = $this->yetki;
						
						$this->load->model('Ogrenci_model');
						$data['tercihler'] = $this->Ogrenci_model->tercih_liste($ogrenci_id);
						
						$this->load->model('Acenta_model');
						$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

						$this->load->model('Ogrenci_durum_model');
						$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();
						$data['all_ulkeler'] = $this->Ulkeler_model->get_all_ulkeler();
						$data['_view'] = 'ogrenci/edit';
						$this->load->view('layouts/main',$data);
					}
				}
				else
					show_error('The Student you are trying to edit does not exist.');
		} else { 		show_error('You must have administrator permission.');			}
    } 

	    /*
     * Editing a ogrenci
     */
    function acenta_edit($ogrenci_id)
    {  
		if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id, $this->yetki) == 1) {
			
			

				// check if the ogrenci exists before trying to edit it
				$data['ogrenci'] = $this->Ogrenci_model->get_ogrenci_acenta($ogrenci_id);
				if(isset($data['ogrenci']['ogrenci_id']))
				{
					if(isset($_POST) && count($_POST) > 0)     
					{   
						$params = array(
							//'a_id' => $this->input->post('a_id'),
							//'durum' => $this->input->post('durum'),
							'adi_soyadi' => $this->input->post('adi_soyadi'),
					'pasaport_no' => $this->input->post('pasaport_no'),
					'baba_adi' => $this->input->post('baba_adi'),
					'anne_adi' => $this->input->post('anne_adi'),
					'dogum_yeri' => $this->input->post('dogum_yeri'),
					'dogum_tarihi' => $this->input->post('dogum_tarihi'),
					'cinsiyet' => $this->input->post('cinsiyet'),
					'medeni_durum' => $this->input->post('medeni_durum'),
					'uyrugu' => $this->input->post('uyrugu'),
					'adres' => $this->input->post('adres'),
					'posta_kodu' => $this->input->post('posta_kodu'),
					'sehir' => $this->input->post('sehir'),
					'ulke' => $this->input->post('ulke'),
					'telefon' => $this->input->post('telefon'),							
						);

						$this->Ogrenci_model->update_ogrenci($ogrenci_id,$params);  
						redirect($_SERVER['HTTP_REFERER']);	
						//redirect('ogrenci/index');
					}
					else
					{
						$this->load->model('Ogrenci_model');
						$data['tercihler'] = $this->Ogrenci_model->tercih_liste($ogrenci_id);
						
						
						$this->load->model('Acenta_model');
						$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

						$this->load->model('Ogrenci_durum_model');
						$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();

						$this->load->model('Ulkeler_model');
						$data['all_ulkeler'] = $this->Ulkeler_model->get_all_ulkeler();
				
						$data['_view'] = 'ogrenci/acenta_edit';
						$this->load->view('layouts/main',$data);
					}
				}
				else
					show_error('The Student you are trying to edit does not exist.');
		} else { show_error('You can not do the operation for this student.');}
    } 

	
	
/* acenta view */
function acenta_goruntuleme($ogrenci_id) {
	
			if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id, $this->yetki) == 1) {

				// check if the ogrenci exists before trying to edit it
				$data['ogrenci'] = $this->Ogrenci_model->get_ogrenci_acenta($ogrenci_id);
				

						$data['yetki'] = $this->yetki;
						
						$this->load->model('Ogrenci_model');
						$data['tercihler'] = $this->Ogrenci_model->tercih_liste($ogrenci_id);
						
						$this->load->model('Acenta_model');
						$data['all_acenta'] = $this->Acenta_model->get_all_acenta();

						$this->load->model('Ogrenci_durum_model');
						$data['all_ogrenci_durum'] = $this->Ogrenci_durum_model->get_all_ogrenci_durum();

						$data['_view'] = 'ogrenci/acenta_goruntuleme';
						$this->load->view('layouts/main',$data);

		} else { show_error('You can not do the operation for this student.');}
		
		
}
/* yüklenen dosyayı silme */
function dosya_sil()
{
	if($this->yetki < 3) {
		$this->db->delete('files',array('id'=>$this->uri->segment("4")));
	} else {
		
		$this->db->select('a_id');
		$this->db->from('ogrenci');
		$this->db->where('ogrenci_id',$this->uri->segment("3"));
		$query = $this->db->get();
		$sonuc = $query->row();	
	if($sonuc->a_id == $this->y_okul_id) {
	$this->db->delete('files',array('id'=>$this->uri->segment("4")));
	}
			}
	redirect($_SERVER['HTTP_REFERER']);
}



/* tercih sil */
function tercih_sil($id) {
	if($this->yetki < 3) {
		$this->db->delete('ogrenci_secimi' , array('id' => $id));
	} else {

		$query = $this->db->query("SELECT a_id FROM ogrenci_secimi, ogrenci WHERE id = '".$id."' AND o_id = ogrenci_id");
		$sonuc = $query->row();
		if($sonuc->a_id == $this->y_okul_id) {
			$this->db->delete('ogrenci_secimi' , array('id' => $id));
		}
		//////////////////////
		
	}
	redirect($_SERVER['HTTP_REFERER']);
}
    /*
     * Deleting ogrenci
     */
    function remove($ogrenci_id)
    {
		if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id , $this->yetki) == 1) {
        $ogrenci = $this->Ogrenci_model->get_ogrenci($ogrenci_id);

        // check if the ogrenci exists before trying to delete it
        if(isset($ogrenci['ogrenci_id']))
        {
            $this->Ogrenci_model->delete_ogrenci($ogrenci_id);
            redirect('ogrenci/index');
        }
		}
        else
            show_error('The Student you are trying to delete does not exist.');
    }
/* katalog işlemleri */
function katalog(){
		$data['_view'] = 'ogrenci/katalog';
		$this->load->view('layouts/main',$data);
}

function katalog_fakulte(){
					$params['limit'] = RECORDS_PER_PAGE; 
					$params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
					$params['seviye'] = $this->uri->segment("3");
					$config = $this->config->item('pagination');
					$config['base_url'] = site_url('ogrenci/katalog_fakulte?');
					$config['total_rows'] = $this->Ogrenci_model->get_all_fakulte_count($this->uri->segment("3"));
					$this->pagination->initialize($config);
					$data['fakulte'] = $this->Ogrenci_model->get_all_fakulte($params);
					$data['_view'] = 'ogrenci/katalog_fakulte';
					$this->load->view('layouts/main',$data);
					
}


	function katalog_bolum()
{
		$params['limit'] = RECORDS_PER_PAGE; 
		$params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
		
		$config = $this->config->item('pagination');
		$config['base_url'] = site_url('ogrenci/katalog_bolum?');
		$config['total_rows'] = $this->Ogrenci_model->get_all_bolum_count($this->uri->segment("3"));
		$this->pagination->initialize($config);

		$data['bolum'] = $this->Ogrenci_model->get_all_bolum($params , $this->uri->segment("3"));
		$data['_view'] = 'ogrenci/katalog_bolum';
		$this->load->view('layouts/main',$data);
					
}
	
	
/* eğitim seviyesi seç */
function seviye_sec()
{
	$data['_view'] = 'ogrenci/seviye_sec';
	$this->load->view('layouts/main',$data);
}	
	function fakulte_sec()
	{
		if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id , $this->yetki) == 1) {
			$evrak_varmi = $this->Ogrenci_model->evrak_kontrol($this->uri->segment("3"));
				if($evrak_varmi > 0) 
				{
					$params['limit'] = RECORDS_PER_PAGE; 
					$params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
					$params['seviye'] = $this->uri->segment("4");
					$config = $this->config->item('pagination');
					$config['base_url'] = site_url('ogrenci/fakulte?');
					$config['total_rows'] = $this->Ogrenci_model->get_all_fakulte_count($this->uri->segment("4"));
					$this->pagination->initialize($config);

					$data['fakulte'] = $this->Ogrenci_model->get_all_fakulte($params);
					$data['_view'] = 'ogrenci/fakulte';
					$this->load->view('layouts/main',$data);
				} else { redirect('ogrenci/index/3');}
			
			
			
		} else
            show_error('You are not authorized to choose a faculty for this student.');
	}
	
		function bolum_sec()
	{
		if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id , $this->yetki) == 1) {
		
			$params['limit'] = RECORDS_PER_PAGE; 
			$params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
			
			$config = $this->config->item('pagination');
			$config['base_url'] = site_url('ogrenci/bolum?');
			$config['total_rows'] = $this->Ogrenci_model->get_all_bolum_count($this->uri->segment("4"));
			$this->pagination->initialize($config);

			$data['bolum'] = $this->Ogrenci_model->get_all_bolum($params , $this->uri->segment("4"));
			$data['_view'] = 'ogrenci/bolum';
			$this->load->view('layouts/main',$data);
			
			
			
			
		} else
            show_error('You are not authorized to choose a program for this student.');
	}
	
	
		    /*
     * Adding a new tercih
     */
    function tercih_yap()
    {   
		if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id, $this->yetki) == 1) {
			
			$tercih_varmi = $this->Ogrenci_model->tercih_kontrol($this->uri->segment("3"));
			
			if($tercih_varmi == 0) {
				  
					$params = array(
						'o_id' => $this->uri->segment("3"),
						'f_id' => $this->uri->segment("4"),
						'b_id' => $this->uri->segment("5"),
						'zaman' => $this->zaman,
					);
					
					$tercih_id = $this->Ogrenci_model->add_tercih($params);
					if($tercih_id>0) {
					//show_error('Bu öğrenci için Başarılı Şekilde Tercih Yapılmıştır');
					        $this->db->where('ogrenci_id',$this->uri->segment("3"));
							$params1 = array( 'durum' => '8' );
							$this->db->update('ogrenci',$params1);
					$this->Ogrenci_model->surec_ekle($this->uri->segment("3")," Apply to a program");
					redirect('ogrenci/index/1');
					} else {
					redirect('ogrenci/index');
					}
			}	 else { redirect('ogrenci/index/2'); }
		} else { show_error('You can not do the operation for this student.');}
    } 
	
	function onaya_yolla()
	{
	if($this->Ogrenci_model->yetki_kontrol($this->uri->segment("3") , $this->y_okul_id, $this->yetki) == 1) {
		$tercih_varmi = $this->Ogrenci_model->tercih_kontrol($this->uri->segment("3"));
		$evrak_varmi = $this->Ogrenci_model->evrak_kontrol($this->uri->segment("3"));
		if($tercih_varmi == 0 or $evrak_varmi == 0) { 	redirect('ogrenci/index/4');	}
		
		$this->db->where('ogrenci_id',$this->uri->segment("3"));
		$params1 = array( 'durum' => '2' );
		$this->db->update('ogrenci',$params1);
		$this->Ogrenci_model->surec_ekle($this->uri->segment("3")," send to approval");
		redirect('ogrenci/index');
		
	} else { show_error('You can not do the operation for this student.');}
	}
	
	
	    function arsiv_yap()
    {   
	//$this->load->model('Ulkeler_model');
		if($this->yetki<3) {
				// check if the ogrenci exists before trying to edit it
				$ogrenci_id = $this->uri->segment("3");
				$data['ogrenci'] = $this->Ogrenci_model->get_ogrenci($ogrenci_id);
				
				if(isset($data['ogrenci']['ogrenci_id']))
				{
					if($data['ogrenci']['arsiv'] == 1){ $yeni_hal = 0;}
					if($data['ogrenci']['arsiv'] == 0){ $yeni_hal = 1;}
					$params = array(
					'arsiv' => $yeni_hal
					);
					$this->Ogrenci_model->update_ogrenci($ogrenci_id,$params); 
					redirect($_SERVER['HTTP_REFERER']);	
				}
				else
					show_error('The Student you are trying to edit does not exist.');
		} else { 		show_error('You must have administrator permission.');			}
    } 
	
    
}
